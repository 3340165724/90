2023年8月19日
问题：
1、2022年国赛指标计算第二题没做出来
根据dws层表customer_consumption_day_aggr表，再联合dwd.dim_region,dwd.dim_nation统计每人每个月下单的数量和下单的总金额，
并按照cust_key，totalconsumption，totalorder，month进行分组逆序排序（以cust_key为分组条件），
将计算结果存入MySQL数据库shtd_store的nationeverymonth表（表结构如下）中，
然后在Linux的MySQL命令行中根据订单总数、消费总额、国家表主键三列均逆序排序的方式，查询出前5条，将SQL语句与执行结果截图粘贴至对应报告中;
字段	类型	中文含义	备注
cust_key	int	客户key	
cust_name	string	客户名称	
nationkey	int	国家表主键	
nationname	text	国家名称	
regionkey	int	地区表主键	
regionname	text	地区名称	
totalconsumption	double	消费总额	当月消费订单总额
totalorder	int	订单总数	当月订单总额
year	int	年	订单产生的年
month	int	月	订单产生的月
sequence	Int	次序	

2、昨天写的sql没保存好
3、学习效率低，大部分时间在玩手机

解决：
1、2022年国赛指标计算第二题明天去问李老师
2、细心，每天上传
3、团队相互监督，向其他人努力看起

今天写的sql：

# 1、统计各个优先级别（字段ORDERPRIORITY）下有效（状态为O的订单）的订单总额，总个数，平均金额，按总额降序排列输出。
select sum(TOTALPRICE) as "订单总额", count(*) as "总个数", avg(TOTALPRICE) as "平均金额"
from orders
where ORDERSTATUS="O"
group by ORDERPRIORITY
order by sum(TOTALPRICE) desc;


# 2、统计下单总金额最多的前三名客户（客户id、客户名、订单总额、订单个数），按订单总额降序显示
select  c.CUSTKEY, c.NAME, sum(o.TOTALPRICE)
from customer as c
inner join orders as o on c.CUSTKEY=o.CUSTKEY
group by  c.CUSTKEY, c.NAME
order by  sum(o.TOTALPRICE) desc
limit 3;


# 3、统计各个国家下的订单总额，按降序排序显示（国家id、国家名、订单总额）
select n.NATIONKEY, n.NAME, sum(o.TOTALPRICE)
from customer as c
inner join orders as o on c.CUSTKEY=o.CUSTKEY
inner join nation as n on c.NATIONKEY=n.NATIONKEY
group by n.NATIONKEY, n.NAME
order by sum(o.TOTALPRICE) desc;


# 4、统计各个地区下的国家个数，按个数降序显示（地区id、地区名称、个数）
select n.NATIONKEY, n.NAME, count(*)
from nation as n
inner join region as r on r.REGIONKEY=n.REGIONKEY
group by n.NATIONKEY, n.NAME
order by count(*) desc;


# 5、统计各个地区在各个年份订单的总数、总金额，按地区下订单总数降序显示（地区id、地区名、年份、订单个数、订单总额）
select r.REGIONKEY, r.NAME, year(o.ORDERDATE), count(*) , sum(o.TOTALPRICE)
from customer as c
inner join orders as o on c.CUSTKEY=o.CUSTKEY
inner join nation as n on c.NATIONKEY=n.NATIONKEY
inner join region as r on n.REGIONKEY=r.REGIONKEY
group by r.REGIONKEY, r.NAME, year(o.ORDERDATE)
order by count(*) desc;


# 6、统计各个国家在每年各个月份下单的总数和总金额
select n.NATIONKEY, n.NAME, year(o.ORDERDATE), month(o.ORDERDATE), count(*), sum(o.TOTALPRICE)
from nation as n
inner join customer as c on n.NATIONKEY=c.NATIONKEY
inner join orders as o on c.CUSTKEY=o.CUSTKEY
group by  n.NATIONKEY, n.NAME, year(o.ORDERDATE), month(o.ORDERDATE)


# 7、统计连续两个月下订单的客户和连续两个月下订单的总个数、总金额，按个数降序显示（客户id、客户名、年、月、总个数、总金额）
-- 查询每个月下单的客户的情况
select c.CUSTKEY, c.NAME, year(o.ORDERDATE), month(o.ORDERDATE), count(*), sum(o.TOTALPRICE)
from customer as c
inner join orders as o on c.CUSTKEY=o.CUSTKEY
group by c.CUSTKEY, c.NAME, year(o.ORDERDATE), month(o.ORDERDATE);

-- 续两个月下订单的客户和连续两个月下订单的总个数、总金额
select t1. CUSTKEY, t1.NAME, y1, m1, c1, s1
from (select c.CUSTKEY, c.NAME, year(o.ORDERDATE) as y1, month(o.ORDERDATE) as m1, count(*) as c1 , sum(o.TOTALPRICE) as s1
      from customer as c
      inner join orders as o on c.CUSTKEY=o.CUSTKEY
      group by c.CUSTKEY, c.NAME, year(o.ORDERDATE), month(o.ORDERDATE)) as t1
inner join (select c.CUSTKEY, c.NAME, year(o.ORDERDATE) as y2, month(o.ORDERDATE) as m2, count(*) as c2, sum(o.TOTALPRICE) as s2
            from customer as c
            inner join orders as o on c.CUSTKEY=o.CUSTKEY
            group by c.CUSTKEY, c.NAME, year(o.ORDERDATE), month(o.ORDERDATE)) as t2
on t1.CUSTKEY=t2.CUSTKEY and ((y1=y2 and m1=m2-1)or (y1=y2-1 and m1=12 and m2=01))

# 8、根据dwd层表统计每人每天下单的数量和下单的总金额，
#   存入dws层的customer_consumption_day_aggr表（表结构如下）中，
#   然后在hive cli中按照cust_key，totalconsumption, totalorder三列均逆序排序的方式，查询出前5条，
#   将SQL语句与执行结果截图粘贴至对应报告中;
#       字段	类型	中文含义	备注
#       cust_key	int	客户key
#       cust_name	string	客户名称
#       totalconsumption	double	消费总额	当月消费订单总额
#       totalorder	int	订单总数	当月订单总额
#       year	int	年	订单产生的年
#       month	int	月	订单产生的月
#       day	int	日	订单产生的日
select c.CUSTKEY, c.NAME, sum(o.TOTALPRICE), count(o.TOTALPRICE),
       year(o.ORDERDATE), month(o.ORDERDATE), day(o.ORDERDATE)
from customer as c
         inner join orders o on c.CUSTKEY=o.CUSTKEY
group by c.CUSTKEY, c.NAME, year(o.ORDERDATE), month(o.ORDERDATE), day(o.ORDERDATE)

